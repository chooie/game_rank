{{ define "games__list" }}
<script src="/public/vendor/js/sortablejs/Sortable.js"></script>

<div id="games-wrapper">
  <h2>Add a Game</h2>

  <form
    action="{{ .Routes.Games }}"
    method="post"
    hx-post="{{ .Routes.Games }}"
    hx-target="#games-wrapper"
    hx-swap="outerHTML"
  >
    <label>
      Title:
      <input
        type="text"
        name="title"
        required
        value="{{ with.Old }}{{ .Title }}{{ end }}"
      />
      {{ with index .Errors "title" }}
      <span class="error">{{ . }}</span>
      {{ end }}
    </label>

    <label>
      Rank:
      <input
        type="number"
        name="rank"
        min="1"
        value="{{ with.Old }}{{ .Rank }}{{ end }}"
      />
      {{ with index .Errors "rank" }}
      <span class="error">{{ . }}</span>
      {{ end }}
    </label>

    <button type="submit">Add</button>

    {{ with index .Errors "_form" }}
    <div class="error">{{ . }}</div>
    {{ end }}
  </form>

  <h2>Games</h2>

  <!-- Sortable form -->
  <form
    class="sortable"
    hx-post="{{ .Routes.GamesReorder }}"
    hx-trigger="end from:#games-list"
    hx-target="#games-wrapper"
    hx-swap="outerHTML"
  >
    <div class="htmx-indicator">Updating…</div>

    <ul id="games-list">
      {{
        range.Games
      }}
      <li class="game-row">
        <input type="hidden" name="game" value="{{ .ID }}" />
        <span class="drag-handle" aria-hidden="true">⠿</span>
        <span class="game-title">{{ .Rank }}: {{ .Title }}</span>
        <button
          type="button"
          class="delete-btn"
          hx-delete="{{ $.Routes.Games }}?id={{ .ID }}"
          hx-params="none"
          hx-target="#games-wrapper"
          hx-swap="outerHTML"
          hx-confirm="Delete “{{ .Title }}”?"
          hx-disabled-elt="this"
        >
          Delete
        </button>
      </li>
      {{ else }}
      <li>No games yet.</li>
      {{
        end
      }}
    </ul>
  </form>

  <style>
    #games-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    .game-row {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.5rem 0.75rem;
      border: 1px solid #ddd;
      border-radius: 0.5rem;
      margin-bottom: 0.5rem;
    }
    .drag-handle {
      cursor: grab;
    }
    .blue-background-class {
      background: rgba(0, 120, 255, 0.1);
    }
  </style>

  <script>
    (function () {
      function initSortables(root) {
        var sortables = root.querySelectorAll(".sortable");
        for (var i = 0; i < sortables.length; i++) {
          (function (sortableForm) {
            // Guard against double-init across multiple htmx swaps
            if (sortableForm.dataset.sortableInit === "1") return;
            sortableForm.dataset.sortableInit = "1";

            var list = sortableForm.querySelector("#games-list");
            if (!list) return;

            var sortableInstance = new Sortable(list, {
              animation: 150,
              ghostClass: "blue-background-class",
              filter: ".htmx-indicator",
              onMove: function (evt) {
                return (
                  evt.related &&
                  evt.related.className.indexOf("htmx-indicator") === -1
                );
              },
              onEnd: function () {
                this.option("disabled", true);
              },
            });

            sortableForm.addEventListener("htmx:afterSwap", function () {
              sortableInstance.option("disabled", false);
            });
          })(sortables[i]);
        }
      }

      if (window.htmx && window.htmx.onLoad) {
        htmx.onLoad(initSortables);
      } else {
        document.addEventListener("DOMContentLoaded", function () {
          initSortables(document);
        });
      }
    })();
  </script>
  {{ end }}
</div>
