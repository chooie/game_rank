<script src="/vendor/js/sortablejs/Sortable.js"></script>

<div id="games-wrapper">
  <h2>Add a Game</h2>

  <form
    action="{{ .Routes.Games }}"
    method="post"
    hx-post="{{ .Routes.Games }}"
    hx-target="#games-wrapper"
    hx-swap="outerHTML"
  >
    <label>
      Title:
      <input
        type="text"
        name="title"
        required
        value="{{ with.Old }}{{ .Title }}{{ end }}"
      />
      {{ with index .Errors "title" }}
      <span class="error">{{ . }}</span>
      {{ end }}
    </label>

    <label>
      Rank:
      <input
        type="number"
        name="rank"
        min="1"
        value="{{ with.Old }}{{ .Rank }}{{ end }}"
      />
      {{ with index .Errors "rank" }}
      <span class="error">{{ . }}</span>
      {{ end }}
    </label>

    <button type="submit">Add</button>

    {{ with index .Errors "_form" }}
    <div class="error">{{ . }}</div>
    {{ end }}
  </form>

  <h2>Games</h2>

  <!-- Sortable form -->
  <form
    class="sortable"
    hx-post="{{ .Routes.GamesReorder }}"
    hx-trigger="end"
    hx-target="#games-wrapper"
    hx-swap="outerHTML"
  >
    <div class="htmx-indicator">Updating…</div>

    <ul id="games-list">
      {{
        range.Games
      }}
      <li class="game-row">
        <!-- Hidden input carries ID in DOM order -->
        <input type="hidden" name="game" value="{{ .ID }}" />
        <span class="drag-handle" aria-hidden="true">⠿</span>
        <span class="game-title">{{ .Rank }}: {{ .Title }}</span>
      </li>
      {{
        end
      }}
    </ul>
  </form>
</div>

<style>
  /* Optional niceties */
  #games-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  .game-row {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 0.75rem;
    border: 1px solid #ddd;
    border-radius: 0.5rem;
    margin-bottom: 0.5rem;
  }
  .drag-handle {
    cursor: grab;
  }
  .blue-background-class {
    background: rgba(0, 120, 255, 0.1);
  }
</style>

<script>
  (function () {
    function initSortables(root) {
      var sortables = root.querySelectorAll(".sortable");
      for (var i = 0; i < sortables.length; i++) {
        (function (sortableForm) {
          var list = sortableForm.querySelector("#games-list");
          if (!list) return;

          var sortableInstance = new Sortable(list, {
            animation: 150,
            ghostClass: "blue-background-class",
            filter: ".htmx-indicator",
            onMove: function (evt) {
              return evt.related.className.indexOf("htmx-indicator") === -1;
            },
            onEnd: function () {
              this.option("disabled", true);
            },
          });

          sortableForm.addEventListener("htmx:afterSwap", function () {
            sortableInstance.option("disabled", false);
          });
        })(sortables[i]);
      }
    }

    if (window.htmx) {
      htmx.onLoad(initSortables);
    } else {
      document.addEventListener("DOMContentLoaded", function () {
        initSortables(document);
      });
    }
  })();
</script>
